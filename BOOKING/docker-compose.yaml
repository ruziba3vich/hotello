services:
  booking-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7002:7002"
    environment:
      MONGO_DB: booking_service
      BOOKINGS_COLLECTION: bookings
      NOTIFICATIONS_COLLECTION: notifications
      PORT: "7002"
      PROTOCOL: tcp
      MONGO_URI: mongodb://mongo:27017/?replicaSet=rs0
      KAFKA_BROKERS: kafka:9092
      NOTIFICATIONS_TOPIC: notifications_topic
      HOTELS_SERVICE: http://hotels-service:7001
    depends_on:
      - mongo
      - kafka
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:7002/health"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: booking_service
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand('ping')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    healthcheck:
      test: ["CMD", "zkCli.sh", "ls", "/"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

volumes:
  mongo-data:
